name: Test and Deploy CloudFormation Stack

on:
  push:
    branches:
      - staging
      - production

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Run Unit Tests
        run: |
          python -m unittest discover tests

  deploy-staging:
    if: github.ref == 'refs/heads/staging'  # Run this job only for the staging branch
    runs-on: ubuntu-latest
    needs: test  # Run only after tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Deploy to Staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_STAGING }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_STAGING }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          python src/deploy.py

      - name: Notify Slack for Staging Deployment
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Staging deployment completed successfully."

  deploy-production:
    if: github.ref == 'refs/heads/production'  # Run this job only for the production branch
    runs-on: ubuntu-latest
    needs: test  # Run only after tests pass

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - name: Deploy to Production
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PRODUCTION }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          python src/deploy.py

      - name: Notify Slack for Production Deployment
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: "Production deployment completed successfully."

  monitor-resources:
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest

    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install AWS SDK for Monitoring
        run: |
          python -m pip install boto3

      - name: Monitor Deployed Resources
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          python src/monitor_resources.py  # Placeholder for monitoring logic
